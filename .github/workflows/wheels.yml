name: Build wheels

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Install Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - name: Build sdist
      run: python setup.py sdist
    - name: Save sdist
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Make extension build mandatory
      run: touch .cibuildwheel
    - name: Install Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.11.2
      env:
        CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
        CIBW_ARCHS_LINUX: "auto aarch64"
        CIBW_SKIP: cp36-*
    - name: Save wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_pypi:
    name: Upload to PyPI
    needs:
      - sdist
      - wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
